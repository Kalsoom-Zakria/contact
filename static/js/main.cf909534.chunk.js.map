{"version":3,"sources":["context.js","components/contacts/Contacts.js","components/contacts/Contact.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contact","filter","contacts","id","payload","concat","toConsumableArray","map","Provider","dispatch","_this","setState","axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contacts","showContactInfo","onDeleteClick","_callee","regenerator_default","wrap","_context","prev","next","delete","t0","stop","_this2","_this$props$contacts","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contact","Fragment","contacts_Contacts","key","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","uuid","post","sent","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf909534.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Contacts from \"../src\";\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contact: state.contact.filter(\n          contacts => contacts.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contact: [action.payload, ...state.contact]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contact: state.contact.map(contacts =>\n          contacts.id === action.payload.id\n            ? (contacts = action.payload)\n            : contacts\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default class Provider extends Component {\n  state = {\n    contact: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contact: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nclass Contacts extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contacts;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nContacts.propTypes = {\n  contacts: PropTypes.object.isRequired\n};\nexport default Contacts;\n","import React, { Component } from \"react\";\nimport Contacts from \"./Contacts\";\nimport { Consumer } from \"../../context\";\nclass Contact extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contact } = value;\n          // console.log(contact)\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              \n              {contact.map(contacts => (\n                <Contacts key={contacts.id} contacts={contacts} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav\n      className=\"navbar navbar-expand-sm\n    navbar-dark bg-danger mb-3 py-0\"\n    >\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n      </div>\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\">\n            <i className=\"fas fa-home\" />Home\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/contact/add\" className=\"nav-link\">\n            <i className=\"fas fa-plus\" />Add\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/about\" className=\"nav-link\">\n            <i className=\"fas fa-question\" />About\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\n// Header.PropTypes = {\n//   branding: PropTypes.string.isRequired\n// };\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    };\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    this.props.history.push(\"/\");\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  s;\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contacts = res.data;\n    this.setState({\n      name: contacts.name,\n      email: contacts.email,\n      phone: contacts.phone\n    });\n  }\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n    \n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    this.props.history.push(\"/\");\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  s;\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContact;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page doesn not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n  //   componentWillMount() {\n  //     console.log(\"componentWillMount...\");\n  //   }\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contact from \"./components/contacts/Contact\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport Provider from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contact} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n// serviceWorker.unregister();\n"],"sourceRoot":""}